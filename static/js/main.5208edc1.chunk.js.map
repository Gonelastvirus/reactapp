{"version":3,"sources":["lib/firebase.js","components/gauge.jsx","App.js","reportWebVitals.js","index.js"],"names":["db","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","getDatabase","chart","_useState","useState","_useState2","Object","slicedToArray","float","setdata","useEffect","starCountRef","ref","onValue","snapshot","value","val","react_default","a","createElement","Fragment","className","dist_default","id","textColor","nrOfLevels","arcsLength","colors","percent","arcPadding","text","toFixed","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"oQAkCaA,GADDC,YArBW,CAErBC,OAAQ,0CAERC,WAAY,sCAEZC,YAAa,0DAEbC,UAAW,sBAEXC,cAAe,kCAEfC,kBAAmB,eAEnBC,MAAO,8CAQSC,eC7BH,SAASC,IAAO,IAAAC,EAETC,mBAAS,GAFAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAExBK,EAFwBH,EAAA,GAElBI,EAFkBJ,EAAA,GAU/B,OAPAK,oBAAU,WACV,IAAMC,EAAeC,YAAIpB,EAAI,SAC7BqB,YAAQF,EAAc,SAACG,GACrB,IAAMC,EAAQD,EAASE,MACvBP,EAAQM,EAAMP,UAEd,IAEAS,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CACAK,GAAG,cACHC,UAAU,OACVC,WAAY,EACZC,WAAY,CAAC,YAAc,WAAa,UACxCC,OAAQ,CAAC,UAAW,UAAW,WAC/BC,QAASpB,EACTqB,WAAY,KACZC,MAAI,IAENb,EAAAC,EAAAC,cAAA,0BAAwB,KAANX,GAAYuB,QAAQ,IAEvB,KAANvB,GAAa,GAEdS,EAAAC,EAAAC,cAAA,KAAGI,GAAG,SAAN,oDAEc,KAANf,EAAY,IAAW,KAANA,GAAa,IAEtCS,EAAAC,EAAAC,cAAA,KAAGI,GAAG,UAAN,yFAIAN,EAAAC,EAAAC,cAAA,KAAGI,GAAI,OAAP,+CC7BGS,MARf,WACE,OACEf,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACjB,EAAD,QCKS+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHjC,EAAAC,EAAAC,cAACF,EAAAC,EAAMiC,WAAP,KACElC,EAAAC,EAAAC,cAACiC,EAAD,QAOJnB","file":"static/js/main.5208edc1.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\n\nimport { initializeApp } from \"firebase/app\";\nimport { getDatabase } from \"firebase/database\";\n\n// TODO: Add SDKs for Firebase products that you want to use\n\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n\n// Your web app's Firebase configuration\n\nconst firebaseConfig = {\n\n  apiKey: \"AIzaSyAqxrTtpuAmvtjLCMvxkkSyJoeaFcZnRqI\",\n\n  authDomain: \"carbon-gecko-293516.firebaseapp.com\",\n\n  databaseURL: \"https://carbon-gecko-293516-default-rtdb.firebaseio.com\",\n\n  projectId: \"carbon-gecko-293516\",\n\n  storageBucket: \"carbon-gecko-293516.appspot.com\",\n\n  messagingSenderId: \"442495314624\",\n\n  appId: \"1:442495314624:web:1d93b8d429dc17047a9b25\"\n\n};\n\n\n// Initialize Firebase\n\nconst app = initializeApp(firebaseConfig);\nexport const db = getDatabase()","import GaugeChart from \"react-gauge-chart\";\nimport React,{useState} from \"react\";\nimport {ref,onValue} from \"firebase/database\";\nimport { db } from \"../lib/firebase\";\nimport { useEffect } from \"react\";\nexport default function chart(){\n\nconst [float,setdata]=useState(0);\nuseEffect(() =>{\nconst starCountRef = ref(db, 'test/');\nonValue(starCountRef, (snapshot) => {\n  const value =(snapshot.val());\n  setdata(value.float);\n});\n},[]);\nreturn(\n  <>\n    <div className=\"App\">\n      <h1>Air purity</h1>\n      <GaugeChart\n      id=\"gauge-chart\"\n      textColor=\"#333\"\n      nrOfLevels={3}\n      arcsLength={[0.0498946875, 0.146484375, 0.8046875]}\n      colors={[\"#5BE12C\", \"#F5CD19\", \"#EA4228\"]}\n      percent={float}\n      arcPadding={0.000005}\n      text\n    />\n    <p>your data is {(float*1024).toFixed(1)}</p>\n    {(() => {\n        if ((float*1024)<=50) {\n          return (\n            <p id=\"green\">You are in Green zone air quality is Satifactory</p>\n          )\n        } else if ((float*1024)>50&&(float*1024)<=200) {\n          return (\n            <p id=\"yellow\">You are in Yellow zone air quality acceptable.However it will effect sensetive people</p>\n          )\n        } else {\n          return (\n            <p id =\"red\">You are in Red zone. Health warning</p>\n          )\n        }\n      })()}\n    </div>\n    </>\n);\n}\n","import React from 'react';\nimport GaugeChart from \"./components/gauge\";\nimport './App.css';\nimport \"./index.css\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GaugeChart />\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}